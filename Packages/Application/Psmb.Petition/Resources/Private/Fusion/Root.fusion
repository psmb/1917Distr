prototype(Psmb.Petition:SignaturesQuery) < prototype(Neos.Fusion:Value) {
	value = ${q(GoogleSheets.get('14anO9UQKBa9lsKbZQcPUt8lDmoFV33W_PXKAOgb5LAI')).filter('[active = "1"]')}
}

prototype(Psmb.Petition:SignPlugin) < prototype(Neos.Fusion:Value) {
	value = Neos.Fusion:Array {
		@context.count =  Psmb.Petition:SignaturesQuery
		@context.count.@process.count = ${value.count()}
		10 = ${'<h2 class="t-title t-title_sm">' + Translation.translate('petitionSigned', null, [], null, 'Psmb.Petition') + '</h2>'}
		20 = Neos.Fusion:Collection {
			@process.tmpl = ${'<div class="SignatureList">' + value + '</div>'}
			@process.topPetitions = Psmb.Ajaxify:Ajaxify
			itemName = 'node'
			collection = Psmb.Petition:SignaturesQuery
			collection.@process.filter = ${value.filter('[VIP = "1"]').get()}
			itemRenderer = Psmb.Petition:Signature
			@cache {
				mode = 'cached'
				entryIdentifier.node = ${node}
				maximumLifetime = '30000'
			}
		}
		30 = Neos.Fusion:Template {
			templatePath = 'resource://Psmb.Petition/Private/Templates/NodeTypes/SignForm.html'
		}
		40 = ${'<h2 class="t-title t-title_sm">' + Translation.translate('numberJoined', null, [count], null, 'Psmb.Petition', count) + '</h2>'}
		50 = Sfi.Site:Carousel {
			@context.signatures = Psmb.Petition:SignaturesQuery
			isWhite = ${false}
			showDots = ${false}
			showArrows = ${true}
			slides = Neos.Fusion:Collection {
				signatures = Psmb.Petition:SignaturesQuery
				collection = ${count > 0 && Array.reverse(signatures.filter('[selected = "1"]').get())}
				itemName = 'node'
				itemRenderer = Sfi.Site:CarouselSlide {
					content = Psmb.Petition:SignatureSelected {
						@process.tm = ${'<div style="padding: 0 50px">' + value + '</div>'}
					}
					@process.contentElementWrapping>
				}
			}
			slidesNav.collection = ${count > 0 && Array.reverse(signatures.filter('[selected = "1"]').get())}
			@process.tmpl = ${'<div class="">' + value + '</div>'}
		}
		60 = Neos.Fusion:Collection {
			@process.tmpl = ${'<div class="SignatureList">' + value + '</div>'}
			@process.allPetitions = Psmb.Ajaxify:Ajaxify
			itemName = 'node'
			collection = Psmb.Petition:SignaturesQuery
			collection.@process.filter = ${Array.reverse(value.filter('[VIP != "1"]').get())}
			itemRenderer = Psmb.Petition:Signature
			@cache {
				mode = 'cached'
				entryIdentifier.node = ${node}
				maximumLifetime = '30000'
			}
		}
	}
	@cache {
		mode = 'cached'
		entryIdentifier.node = ${node}
		maximumLifetime = '30000'
	}
}


prototype(Psmb.Petition:SignatureSelected) < prototype(Neos.Fusion:Template) {
	templatePath = 'resource://Psmb.Petition/Private/Templates/NodeTypes/SignatureSelected.html'
	name = ${node.name}
	place = ${node.place}
	about = ${node.about}
	comment = ${node.comment}
}

prototype(Psmb.Petition:Signature) < prototype(Neos.Fusion:Template) {
	templatePath = 'resource://Psmb.Petition/Private/Templates/NodeTypes/Signature.html'
	name = ${node.name}
	place = ${node.place}
	about = ${node.about}
	email = ${node.email}
	comment = ${node.comment}
	inBackend = ${node.context.inBackend}
}
